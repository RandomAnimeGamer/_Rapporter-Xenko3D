/**************************
***** Compiler Parameters *****
***************************
@P EffectName: FlareArtifactEffect
@P   - FlareArtifact.Count: 8
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id72 => SpriteBase.MatrixTransform
cbuffer Globals [Size: 352]
@C    Texture0TexelSize_id14 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id16 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id18 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id20 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id22 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id24 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id26 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id28 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id30 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id32 => Texturing.Texture9TexelSize
@C    Amount_id74 => FlareArtifactShader.Amount
@C    ZoomOffsetsDistortions_id75 => FlareArtifactShader.ZoomOffsetsDistortions
@C    ColorAberrations_id76 => FlareArtifactShader.ColorAberrations
@C    AberrationStrength_id77 => FlareArtifactShader.AberrationStrength
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    LinearSampler_id43 => Texturing.LinearSampler [Stage: Pixel, Slot: (0-0)]
@R    Texture0_id13 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    FlareArtifactShader => 2b9a8329fd3361119a727b557b839bbc
@S    ImageEffectShader => 31376a3f3da836cbe499b1374d52b9a7
@S    SpriteBase => a411b8f5112d9bc821268e8c81e1a94c
@S    ShaderBase => 5c3160ccbf936c5e102bd9315f0f946a
@S    ShaderBaseStream => f699080594ac63c1f38140de57ce1a7b
@S    Texturing => a9d9ee1fb9a68af7ce6b12291686faea
***************************
*****     Stages      *****
***************************
@G    Vertex => 7b8af58dd24be2684728cc0b8599ce6f
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id72;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PerDraw                           cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_4_0
dcl_constantbuffer cb0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id71.x; v0.y <- __input__.Position_id71.y; v0.z <- __input__.Position_id71.z; v0.w <- __input__.Position_id71.w; 
//   v1.x <- __input__.TexCoord_id61.x; v1.y <- __input__.TexCoord_id61.y; 
//   o1.x <- <VSMain return value>.TexCoord_id61.x; o1.y <- <VSMain return value>.TexCoord_id61.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 95 "C:\_Rapporter-Xenko3D\FirstPersonShooter2\FirstPersonShooter2\Bin\Windows\Debug\log\shader_FlareArtifactEffect_0c1fe78a754f7a1ea9dfb85606105bad.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 99
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => dc2dfe52b50d5d403a6d78d5d6af0e5b
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id14;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id16;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id18;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id20;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id22;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id24;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id26;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id28;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id30;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id32;     // Offset:   72 Size:     8 [unused]
//   float Amount_id74;                 // Offset:   80 Size:     4
//   float2 ZoomOffsetsDistortions_id75[8];// Offset:   96 Size:   120
//   float3 ColorAberrations_id76[8];   // Offset:  224 Size:   124
//   float AberrationStrength_id77;     // Offset:  348 Size:     4
//      = 0x00000000 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// LinearSampler_id43                sampler      NA          NA    0        1
// Texture0_id13                     texture  float4          2d    0        1
// Globals                           cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[22], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id61.x; v1.y <- __input__.TexCoord_id61.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id1.x; o0.y <- <PSMain return value>.ColorTarget_id1.y; o0.z <- <PSMain return value>.ColorTarget_id1.z; o0.w <- <PSMain return value>.ColorTarget_id1.w
//
#line 76 "C:\_Rapporter-Xenko3D\FirstPersonShooter2\FirstPersonShooter2\Bin\Windows\Debug\log\shader_FlareArtifactEffect_0c1fe78a754f7a1ea9dfb85606105bad.hlsl"
add r0.xyz, cb0[14].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r0.xyz, cb0[21].wwww, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.xyz, cb0[15].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, cb0[21].wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)

#line 56
add r2.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)  // r2.x <- fromCenterVector.x; r2.y <- fromCenterVector.y
dp2 r0.w, r2.xyxx, r2.xyxx  // r0.w <- squareDistanceToCenter
sqrt r0.w, r0.w  // r0.w <- distanceToCenter

#line 67
log r0.w, r0.w
mul r1.w, r0.w, cb0[7].y
exp r1.w, r1.w
sincos r1.w, null, r1.w  // r1.w <- distortion
mul r2.zw, r2.xxxy, cb0[7].xxxx
mul r3.xy, r1.wwww, r2.zwzz
mad r2.zw, r1.wwww, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)  // r2.z <- distortedUV.x; r2.w <- distortedUV.y

#line 71
add r3.xy, -|r3.xyxx|, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r3.x <- borderNear.x; r3.y <- borderNear.y
mul_sat r1.w, r3.y, r3.x  // r1.w <- alpha
mul r1.w, r1.w, r1.w

#line 69
sample r3.xyzw, r2.zwzz, t0.xyzw, s0  // r3.x <- tapColor.x; r3.y <- tapColor.y; r3.z <- tapColor.z

#line 73
mul r3.xyz, r1.wwww, r3.xyzx
lt r4.xy, r2.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r2.zzzw
or r1.w, r2.z, r4.x
or r1.w, r4.y, r1.w
or r1.w, r2.w, r1.w
movc r3.xyz, r1.wwww, l(0,0,0,0), r3.xyzx
mul r1.xyz, r1.xyzx, r3.xyzx  // r1.x <- tapColor.x; r1.y <- tapColor.y; r1.z <- tapColor.z

#line 67
mul r1.w, r0.w, cb0[6].y
exp r1.w, r1.w
sincos r1.w, null, r1.w  // r1.w <- distortion
mul r2.zw, r2.xxxy, cb0[6].xxxx
mul r3.xy, r1.wwww, r2.zwzz
mad r2.zw, r1.wwww, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)  // r2.z <- distortedUV.x; r2.w <- distortedUV.y

#line 71
add r3.xy, -|r3.xyxx|, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r3.x <- borderNear.x; r3.y <- borderNear.y
mul_sat r1.w, r3.y, r3.x  // r1.w <- alpha
mul r1.w, r1.w, r1.w

#line 69
sample r3.xyzw, r2.zwzz, t0.xyzw, s0  // r3.x <- tapColor.x; r3.y <- tapColor.y; r3.z <- tapColor.z

#line 73
mul r3.xyz, r1.wwww, r3.xyzx
lt r4.xy, r2.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r2.zzzw
or r1.w, r2.z, r4.x
or r1.w, r4.y, r1.w
or r1.w, r2.w, r1.w
movc r3.xyz, r1.wwww, l(0,0,0,0), r3.xyzx
mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx  // r0.x <- result.x; r0.y <- result.y; r0.z <- result.z
add r1.xyz, cb0[16].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, cb0[21].wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)

#line 67
mul r1.w, r0.w, cb0[8].y
exp r1.w, r1.w
sincos r1.w, null, r1.w  // r1.w <- distortion
mul r2.zw, r2.xxxy, cb0[8].xxxx
mul r3.xy, r1.wwww, r2.zwzz
mad r2.zw, r1.wwww, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)  // r2.z <- distortedUV.x; r2.w <- distortedUV.y

#line 71
add r3.xy, -|r3.xyxx|, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r3.x <- borderNear.x; r3.y <- borderNear.y
mul_sat r1.w, r3.y, r3.x  // r1.w <- alpha
mul r1.w, r1.w, r1.w

#line 69
sample r3.xyzw, r2.zwzz, t0.xyzw, s0  // r3.x <- tapColor.x; r3.y <- tapColor.y

#line 73
mul r3.xyz, r1.wwww, r3.xyzx
lt r4.xy, r2.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r2.zzzw
or r1.w, r2.z, r4.x
or r1.w, r4.y, r1.w
or r1.w, r2.w, r1.w
movc r3.xyz, r1.wwww, l(0,0,0,0), r3.xyzx
mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
add r1.xyz, cb0[17].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, cb0[21].wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)

#line 67
mul r1.w, r0.w, cb0[9].y
exp r1.w, r1.w
sincos r1.w, null, r1.w  // r1.w <- distortion
mul r2.zw, r2.xxxy, cb0[9].xxxx
mul r3.xy, r1.wwww, r2.zwzz
mad r2.zw, r1.wwww, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)  // r2.z <- distortedUV.x; r2.w <- distortedUV.y

#line 71
add r3.xy, -|r3.xyxx|, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r3.x <- borderNear.x; r3.y <- borderNear.y
mul_sat r1.w, r3.y, r3.x  // r1.w <- alpha
mul r1.w, r1.w, r1.w

#line 69
sample r3.xyzw, r2.zwzz, t0.xyzw, s0  // r3.x <- tapColor.x; r3.y <- tapColor.y

#line 73
mul r3.xyz, r1.wwww, r3.xyzx
lt r4.xy, r2.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r2.zzzw
or r1.w, r2.z, r4.x
or r1.w, r4.y, r1.w
or r1.w, r2.w, r1.w
movc r3.xyz, r1.wwww, l(0,0,0,0), r3.xyzx
mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
add r1.xyz, cb0[18].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, cb0[21].wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)

#line 67
mul r1.w, r0.w, cb0[10].y
exp r1.w, r1.w
sincos r1.w, null, r1.w  // r1.w <- distortion
mul r2.zw, r2.xxxy, cb0[10].xxxx
mul r3.xy, r1.wwww, r2.zwzz
mad r2.zw, r1.wwww, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)  // r2.z <- distortedUV.x; r2.w <- distortedUV.y

#line 71
add r3.xy, -|r3.xyxx|, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r3.x <- borderNear.x; r3.y <- borderNear.y
mul_sat r1.w, r3.y, r3.x  // r1.w <- alpha
mul r1.w, r1.w, r1.w

#line 69
sample r3.xyzw, r2.zwzz, t0.xyzw, s0  // r3.x <- tapColor.x; r3.y <- tapColor.y

#line 73
mul r3.xyz, r1.wwww, r3.xyzx
lt r4.xy, r2.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r2.zzzw
or r1.w, r2.z, r4.x
or r1.w, r4.y, r1.w
or r1.w, r2.w, r1.w
movc r3.xyz, r1.wwww, l(0,0,0,0), r3.xyzx
mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
add r1.xyz, cb0[19].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, cb0[21].wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)

#line 67
mul r1.w, r0.w, cb0[11].y
exp r1.w, r1.w
sincos r1.w, null, r1.w  // r1.w <- distortion
mul r2.zw, r2.xxxy, cb0[11].xxxx
mul r3.xy, r1.wwww, r2.zwzz
mad r2.zw, r1.wwww, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)  // r2.z <- distortedUV.x; r2.w <- distortedUV.y

#line 71
add r3.xy, -|r3.xyxx|, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r3.x <- borderNear.x; r3.y <- borderNear.y
mul_sat r1.w, r3.y, r3.x  // r1.w <- alpha
mul r1.w, r1.w, r1.w

#line 69
sample r3.xyzw, r2.zwzz, t0.xyzw, s0  // r3.x <- tapColor.x; r3.y <- tapColor.y

#line 73
mul r3.xyz, r1.wwww, r3.xyzx
lt r4.xy, r2.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r2.zzzw
or r1.w, r2.z, r4.x
or r1.w, r4.y, r1.w
or r1.w, r2.w, r1.w
movc r3.xyz, r1.wwww, l(0,0,0,0), r3.xyzx
mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
add r1.xyz, cb0[20].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, cb0[21].wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)

#line 67
mul r1.w, r0.w, cb0[12].y
mul r0.w, r0.w, cb0[13].y
exp r0.w, r0.w
sincos r0.w, null, r0.w  // r0.w <- distortion
exp r1.w, r1.w
sincos r1.w, null, r1.w  // r1.w <- distortion
mul r2.zw, r2.xxxy, cb0[12].xxxx
mul r2.xy, r2.xyxx, cb0[13].xxxx
mul r3.xy, r1.wwww, r2.zwzz
mad r2.zw, r1.wwww, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)  // r2.z <- distortedUV.x; r2.w <- distortedUV.y

#line 71
add r3.xy, -|r3.xyxx|, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r3.x <- borderNear.x; r3.y <- borderNear.y
mul_sat r1.w, r3.y, r3.x  // r1.w <- alpha
mul r1.w, r1.w, r1.w

#line 69
sample r3.xyzw, r2.zwzz, t0.xyzw, s0  // r3.x <- tapColor.x; r3.y <- tapColor.y

#line 73
mul r3.xyz, r1.wwww, r3.xyzx
lt r4.xy, r2.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r2.zzzw
or r1.w, r2.z, r4.x
or r1.w, r4.y, r1.w
or r1.w, r2.w, r1.w
movc r3.xyz, r1.wwww, l(0,0,0,0), r3.xyzx
mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
add r1.xyz, cb0[21].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, cb0[21].wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)

#line 68
mul r2.zw, r0.wwww, r2.xxxy
mad r2.xy, r0.wwww, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // r2.x <- distortedUV.x; r2.y <- distortedUV.y

#line 71
add r2.zw, -|r2.zzzw|, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)  // r2.z <- borderNear.x; r2.w <- borderNear.y
mul_sat r0.w, r2.w, r2.z  // r0.w <- alpha
mul r0.w, r0.w, r0.w

#line 69
sample r3.xyzw, r2.xyxx, t0.xyzw, s0

#line 73
mul r3.xyz, r0.wwww, r3.xyzx
lt r2.zw, r2.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r2.xyxx
or r0.w, r2.x, r2.z
or r0.w, r2.w, r0.w
or r0.w, r2.y, r0.w
movc r2.xyz, r0.wwww, l(0,0,0,0), r3.xyzx  // r2.x <- tapColor.x; r2.y <- tapColor.y; r2.z <- tapColor.z
mad r0.xyz, r2.xyzx, r1.xyzx, r0.xyzx
mul o0.xyz, r0.xyzx, cb0[5].xxxx

#line 88
mov o0.w, l(1.000000)
ret 
// Approximately 175 instruction slots used
***************************
*************************/
const static int TapCount_id73 = 8;
Texture2D Texture0_id13;
SamplerState LinearSampler_id43 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
struct PS_STREAMS 
{
    float2 TexCoord_id61;
    float4 ColorTarget_id1;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id1 : SV_Target0;
};
struct VS_STREAMS 
{
    float4 Position_id71;
    float2 TexCoord_id61;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id61 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id71 : POSITION;
    float2 TexCoord_id61 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id72;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id14;
    float2 Texture1TexelSize_id16;
    float2 Texture2TexelSize_id18;
    float2 Texture3TexelSize_id20;
    float2 Texture4TexelSize_id22;
    float2 Texture5TexelSize_id24;
    float2 Texture6TexelSize_id26;
    float2 Texture7TexelSize_id28;
    float2 Texture8TexelSize_id30;
    float2 Texture9TexelSize_id32;
    float Amount_id74;
    float2 ZoomOffsetsDistortions_id75[TapCount_id73];
    float3 ColorAberrations_id76[TapCount_id73];
    float AberrationStrength_id77 = 0;
};
float4 Shading_id3(inout PS_STREAMS streams)
{
    float2 uv = streams.TexCoord_id61;
    float2 fromCenterVector = uv - float2(0.5, 0.5);
    float squareDistanceToCenter = dot(fromCenterVector, fromCenterVector);
    float distanceToCenter = sqrt(squareDistanceToCenter);
    float2 originalUV = uv;
    float3 result = float3(0.0, 0.0, 0.0);

    [unroll]
    for (int i = 0; i < TapCount_id73; i++)
    {
        float2 zoomOffsetsDistortions = ZoomOffsetsDistortions_id75[i];
        uv = (originalUV - 0.5) * zoomOffsetsDistortions.x + 0.5;
        float distortion = sin(pow(distanceToCenter, zoomOffsetsDistortions.y));
        float2 distortedUV = distortion * (uv - 0.5) + 0.5;
        float3 tapColor = Texture0_id13.Sample(LinearSampler_id43, distortedUV).rgb;
        float border = 0.1;
        float2 borderNear = lerp(float2(0.0, 0.0), float2(1.0, 1.0), (0.5 - abs(distortedUV - 0.5)) / border);
        float alpha = saturate(borderNear.x * borderNear.y);
        tapColor *= alpha * alpha;
        if (distortedUV.x < 0 || distortedUV.x > 1 || distortedUV.y < 0 || distortedUV.y > 1)
            tapColor = float3(0.0, 0.0, 0.0);
        tapColor *= lerp(float3(1, 1, 1), ColorAberrations_id76[i], AberrationStrength_id77);
        result += tapColor;
    }
    return float4(result * Amount_id74, 1.0);
}
PS_OUTPUT PSMain(VS_OUTPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id61 = __input__.TexCoord_id61;
    streams.ColorTarget_id1 = Shading_id3(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id1 = streams.ColorTarget_id1;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id71 = __input__.Position_id71;
    streams.TexCoord_id61 = __input__.TexCoord_id61;
    streams.ShadingPosition_id0 = mul(streams.Position_id71, MatrixTransform_id72);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id61 = streams.TexCoord_id61;
    return __output__;
}
