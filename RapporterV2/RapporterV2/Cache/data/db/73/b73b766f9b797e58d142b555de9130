// Copyright (c) 2016 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.

namespace SiliconStudio.Xenko.Rendering.Shadows
{
    shader ShadowMapCasterCubeMapProjection : ShaderBase, PositionStream4, Texturing
    {
        cbuffer PerView.ShadowCaster
        {
            // x = Near; y = 1/(Far-Near)
            float2 DepthParameters;
        }

        // Used to write the distance from an object to the light to the depth buffer
        stage stream float PixelDepth : SV_DEPTH;
        
        stage override void VSMain()
        {
            // Project into light view space
            float3 lightPosition = Transformation.ViewInverse[3].xyz;
            float4 lightSpace = mul(streams.Position, Transformation.WorldView);

            // Store length and normalize
            float distanceToLight = length(lightSpace.xyz);

            // Send depth to pixel shader
            streams.DepthVS = (distanceToLight-DepthParameters.x) * DepthParameters.y;

            streams.ShadingPosition = mul(lightSpace, Transformation.Projection);
        }
        
        stage override void PSMain()
        {
            streams.PixelDepth = streams.DepthVS;
        }
    };
}