/**************************
***** Compiler Parameters *****
***************************
@P EffectName: ImageSuperSamplerScalerEffect
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id72 => SpriteBase.MatrixTransform
cbuffer Globals [Size: 112]
@C    Texture0TexelSize_id14 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id16 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id18 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id20 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id22 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id24 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id26 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id28 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id30 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id32 => Texturing.Texture9TexelSize
@C    Color_id73 => ImageScalerShader.Color
@C    IsOnlyChannelRed_id74 => ImageScalerShader.IsOnlyChannelRed
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    Sampler_id41 => Texturing.Sampler [Stage: Pixel, Slot: (0-0)]
@R    Texture0_id13 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ImageScalerShader => aecbb2ed83505647565dd97a9b618fbf
@S    ImageEffectShader => 31376a3f3da836cbe499b1374d52b9a7
@S    SpriteBase => a411b8f5112d9bc821268e8c81e1a94c
@S    ShaderBase => 5c3160ccbf936c5e102bd9315f0f946a
@S    ShaderBaseStream => f699080594ac63c1f38140de57ce1a7b
@S    Texturing => a9d9ee1fb9a68af7ce6b12291686faea
@S    SpriteSuperSampler => 4e5a7e6715da9a1743f7ebc5dc311f5c
***************************
*****     Stages      *****
***************************
@G    Vertex => 7b8af58dd24be2684728cc0b8599ce6f
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id72;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PerDraw                           cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_4_0
dcl_constantbuffer cb0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id71.x; v0.y <- __input__.Position_id71.y; v0.z <- __input__.Position_id71.z; v0.w <- __input__.Position_id71.w; 
//   v1.x <- __input__.TexCoord_id61.x; v1.y <- __input__.TexCoord_id61.y; 
//   o1.x <- <VSMain return value>.TexCoord_id61.x; o1.y <- <VSMain return value>.TexCoord_id61.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 170 "C:\_Rapporter-Xenko3D\RapporterV2\RapporterV2\Bin\Windows\Debug\log\shader_ImageSuperSamplerScalerEffect_b924f2be919d718ea42f61fe40fa432d.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 174
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 4332155ee12dc651e855058d0f351e46
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id14;     // Offset:    0 Size:     8
//   float2 Texture1TexelSize_id16;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id18;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id20;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id22;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id24;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id26;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id28;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id30;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id32;     // Offset:   72 Size:     8 [unused]
//   float4 Color_id73;                 // Offset:   80 Size:    16
//   float IsOnlyChannelRed_id74;       // Offset:   96 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Sampler_id41                      sampler      NA          NA    0        1
// Texture0_id13                     texture  float4          2d    0        1
// Globals                           cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id61.x; v1.y <- __input__.TexCoord_id61.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id1.x; o0.y <- <PSMain return value>.ColorTarget_id1.y; o0.z <- <PSMain return value>.ColorTarget_id1.z; o0.w <- <PSMain return value>.ColorTarget_id1.w
//
#line 149 "C:\_Rapporter-Xenko3D\RapporterV2\RapporterV2\Bin\Windows\Debug\log\shader_ImageSuperSamplerScalerEffect_b924f2be919d718ea42f61fe40fa432d.hlsl"
mad r0.xyzw, cb0[0].xyxy, l(-2.000000, 0.000000, 2.000000, 0.000000), v1.xyxy  // r0.z <- streams.TexCoord_id61.x; r0.w <- streams.TexCoord_id61.y

#line 125
sample r1.xyzw, r0.xyxx, t0.xyzw, s0  // r1.x <- <Shading_id2 return value>.x; r1.y <- <Shading_id2 return value>.y; r1.z <- <Shading_id2 return value>.z; r1.w <- <Shading_id2 return value>.w
sample r0.xyzw, r0.zwzz, t0.xyzw, s0  // r0.x <- <Shading_id2 return value>.x; r0.y <- <Shading_id2 return value>.y; r0.z <- <Shading_id2 return value>.z; r0.w <- <Shading_id2 return value>.w

#line 133
mov r2.x, r1.x

#line 125
sample r3.xyzw, v1.xyxx, t0.xyzw, s0  // r3.x <- <Shading_id2 return value>.x; r3.y <- <Shading_id2 return value>.y; r3.z <- <Shading_id2 return value>.z; r3.w <- <Shading_id2 return value>.w

#line 133
mov r4.x, r3.x
mov r4.z, l(1.000000)

#line 130
ne r1.x, cb0[6].x, l(0.000000)

#line 133
movc r4.yzw, r1.xxxx, r4.xxxz, r3.yyzw  // r4.y <- color.y; r4.z <- color.z; r4.w <- color.w
mul r3.xyzw, r4.xyzw, cb0[5].xyzw  // r3.x <- <Shading_id3 return value>.x; r3.y <- <Shading_id3 return value>.y; r3.z <- <Shading_id3 return value>.z; r3.w <- <Shading_id3 return value>.w

#line 150
mul r3.xyzw, r3.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000)

#line 133
mov r2.z, l(1.000000)
movc r2.yzw, r1.xxxx, r2.xxxz, r1.yyzw  // r2.y <- color.y; r2.z <- color.z; r2.w <- color.w

#line 150
mad r2.xyzw, r2.xyzw, cb0[5].xyzw, r3.xyzw  // r2.x <- color.x; r2.y <- color.y; r2.z <- color.z; r2.w <- color.w

#line 133
mov r3.x, r0.x
mov r3.z, l(1.000000)
movc r3.yzw, r1.xxxx, r3.xxxz, r0.yyzw  // r3.y <- color.y; r3.z <- color.z; r3.w <- color.w

#line 150
mad r0.xyzw, r3.xyzw, cb0[5].xyzw, r2.xyzw  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w
mad r2.xyzw, cb0[0].xyxy, l(-1.000000, 1.000000, 1.000000, -1.000000), v1.xyxy  // r2.z <- streams.TexCoord_id61.x; r2.w <- streams.TexCoord_id61.y

#line 125
sample r3.xyzw, r2.xyxx, t0.xyzw, s0  // r3.x <- <Shading_id2 return value>.x; r3.y <- <Shading_id2 return value>.y; r3.z <- <Shading_id2 return value>.z; r3.w <- <Shading_id2 return value>.w
sample r2.xyzw, r2.zwzz, t0.xyzw, s0  // r2.x <- <Shading_id2 return value>.x; r2.y <- <Shading_id2 return value>.y; r2.z <- <Shading_id2 return value>.z; r2.w <- <Shading_id2 return value>.w

#line 133
mov r4.x, r3.x
mov r4.z, l(1.000000)
movc r4.yzw, r1.xxxx, r4.xxxz, r3.yyzw  // r4.y <- color.y; r4.z <- color.z; r4.w <- color.w
mul r3.xyzw, r4.xyzw, cb0[5].xyzw  // r3.x <- <Shading_id3 return value>.x; r3.y <- <Shading_id3 return value>.y; r3.z <- <Shading_id3 return value>.z; r3.w <- <Shading_id3 return value>.w

#line 150
mad r0.xyzw, r3.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r0.xyzw
add r1.yz, v1.xxyx, cb0[0].xxyx  // r1.y <- streams.TexCoord_id61.x; r1.z <- streams.TexCoord_id61.y

#line 125
sample r3.xyzw, r1.yzyy, t0.xyzw, s0  // r3.x <- <Shading_id2 return value>.x; r3.y <- <Shading_id2 return value>.y; r3.z <- <Shading_id2 return value>.z; r3.w <- <Shading_id2 return value>.w

#line 133
mov r4.x, r3.x
mov r4.z, l(1.000000)
movc r4.yzw, r1.xxxx, r4.xxxz, r3.yyzw  // r4.z <- color.z
mul r3.xyzw, r4.xyzw, cb0[5].xyzw  // r3.x <- <Shading_id3 return value>.x; r3.y <- <Shading_id3 return value>.y; r3.z <- <Shading_id3 return value>.z; r3.w <- <Shading_id3 return value>.w

#line 150
mad r0.xyzw, r3.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r0.xyzw

#line 133
mov r3.z, l(1.000000)

#line 149
add r1.yz, v1.xxyx, -cb0[0].xxyx

#line 125
sample r4.xyzw, r1.yzyy, t0.xyzw, s0  // r4.x <- <Shading_id2 return value>.x; r4.y <- <Shading_id2 return value>.y; r4.z <- <Shading_id2 return value>.z; r4.w <- <Shading_id2 return value>.w

#line 133
mov r3.x, r4.x
movc r3.yzw, r1.xxxx, r3.xxxz, r4.yyzw  // r3.y <- color.y; r3.z <- color.z; r3.w <- color.w
mul r3.xyzw, r3.xyzw, cb0[5].xyzw  // r3.x <- <Shading_id3 return value>.x; r3.y <- <Shading_id3 return value>.y; r3.z <- <Shading_id3 return value>.z; r3.w <- <Shading_id3 return value>.w

#line 150
mad r0.xyzw, r3.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r0.xyzw

#line 133
mov r3.x, r2.x
mov r3.z, l(1.000000)
movc r3.yzw, r1.xxxx, r3.xxxz, r2.yyzw  // r3.y <- color.y; r3.z <- color.z; r3.w <- color.w
mul r2.xyzw, r3.xyzw, cb0[5].xyzw  // r2.x <- <Shading_id3 return value>.x; r2.y <- <Shading_id3 return value>.y; r2.z <- <Shading_id3 return value>.z; r2.w <- <Shading_id3 return value>.w

#line 150
mad r0.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r0.xyzw
mad r2.xyzw, cb0[0].xyxy, l(0.000000, 2.000000, 0.000000, -2.000000), v1.xyxy  // r2.z <- streams.TexCoord_id61.x; r2.w <- streams.TexCoord_id61.y

#line 125
sample r3.xyzw, r2.xyxx, t0.xyzw, s0  // r3.x <- <Shading_id2 return value>.x; r3.y <- <Shading_id2 return value>.y; r3.z <- <Shading_id2 return value>.z; r3.w <- <Shading_id2 return value>.w
sample r2.xyzw, r2.zwzz, t0.xyzw, s0  // r2.x <- <Shading_id2 return value>.x; r2.y <- <Shading_id2 return value>.y; r2.z <- <Shading_id2 return value>.z; r2.w <- <Shading_id2 return value>.w

#line 133
mov r4.x, r3.x
mov r4.z, l(1.000000)
movc r4.yzw, r1.xxxx, r4.xxxz, r3.yyzw  // r4.y <- color.y; r4.z <- color.z; r4.w <- color.w

#line 150
mad r0.xyzw, r4.xyzw, cb0[5].xyzw, r0.xyzw

#line 133
mov r3.x, r2.x
mov r3.z, l(1.000000)
movc r3.yzw, r1.xxxx, r3.xxxz, r2.yyzw  // r3.y <- color.y; r3.z <- color.z; r3.w <- color.w

#line 150
mad r0.xyzw, r3.xyzw, cb0[5].xyzw, r0.xyzw

#line 154
mul o0.xyzw, r0.xyzw, l(0.066667, 0.066667, 0.066667, 0.066667)

#line 163
ret 
// Approximately 58 instruction slots used
***************************
*************************/
Texture2D Texture0_id13;
Texture2D Texture1_id15;
Texture2D Texture2_id17;
Texture2D Texture3_id19;
Texture2D Texture4_id21;
Texture2D Texture5_id23;
Texture2D Texture6_id25;
Texture2D Texture7_id27;
Texture2D Texture8_id29;
Texture2D Texture9_id31;
TextureCube TextureCube0_id33;
TextureCube TextureCube1_id34;
TextureCube TextureCube2_id35;
TextureCube TextureCube3_id36;
Texture3D Texture3D0_id37;
Texture3D Texture3D1_id38;
Texture3D Texture3D2_id39;
Texture3D Texture3D3_id40;
SamplerState Sampler_id41;
SamplerState PointSampler_id42 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id43 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id45 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id46 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id47 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id48 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id50 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id51;
SamplerState Sampler1_id52;
SamplerState Sampler2_id53;
SamplerState Sampler3_id54;
SamplerState Sampler4_id55;
SamplerState Sampler5_id56;
SamplerState Sampler6_id57;
SamplerState Sampler7_id58;
SamplerState Sampler8_id59;
SamplerState Sampler9_id60;
struct PS_STREAMS 
{
    float2 TexCoord_id61;
    float4 ColorTarget_id1;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id1 : SV_Target0;
};
struct VS_STREAMS 
{
    float4 Position_id71;
    float2 TexCoord_id61;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id61 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id71 : POSITION;
    float2 TexCoord_id61 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id72;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id14;
    float2 Texture1TexelSize_id16;
    float2 Texture2TexelSize_id18;
    float2 Texture3TexelSize_id20;
    float2 Texture4TexelSize_id22;
    float2 Texture5TexelSize_id24;
    float2 Texture6TexelSize_id26;
    float2 Texture7TexelSize_id28;
    float2 Texture8TexelSize_id30;
    float2 Texture9TexelSize_id32;
    float4 Color_id73;
    float IsOnlyChannelRed_id74;
};
float4 Shading_id2(inout PS_STREAMS streams)
{
    return Texture0_id13.Sample(Sampler_id41, streams.TexCoord_id61);
}
float4 Shading_id3(inout PS_STREAMS streams)
{
    float4 color = Shading_id2(streams);
    if (IsOnlyChannelRed_id74 != 0)
    {
        color = float4(color.rrr, 1);
    }
    return color * Color_id73;
}
float4 Shading_id4(inout PS_STREAMS streams)
{
    float2 jitters[] = { float2(-2.0, 0.0), float2(0.0, 0.0), float2(2.0, 0.0), float2(-1.0, 1.0), float2(1.0, 1.0), float2(-1.0, -1.0), float2(1.0, -1.0), float2(0.0, 2.0), float2(0.0, -2.0)};
    float weightSum = 0;
    float4 color = 0;
    float2 texCoordBackup = streams.TexCoord_id61;

    [unroll]
    for (uint j = 0; j < 9; ++j)
    {
        float2 jitter = jitters[j];
        float dist = max(abs(jitter.x), abs(jitter.y));
        float weight = 3 - dist;
        streams.TexCoord_id61 = texCoordBackup + jitter * Texture0TexelSize_id14;
        color += weight * Shading_id3(streams);
        weightSum += weight;
    }
    streams.TexCoord_id61 = texCoordBackup;
    return color / weightSum;
}
PS_OUTPUT PSMain(VS_OUTPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id61 = __input__.TexCoord_id61;
    streams.ColorTarget_id1 = Shading_id4(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id1 = streams.ColorTarget_id1;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id71 = __input__.Position_id71;
    streams.TexCoord_id61 = __input__.TexCoord_id61;
    streams.ShadingPosition_id0 = mul(streams.Position_id71, MatrixTransform_id72);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id61 = streams.TexCoord_id61;
    return __output__;
}
