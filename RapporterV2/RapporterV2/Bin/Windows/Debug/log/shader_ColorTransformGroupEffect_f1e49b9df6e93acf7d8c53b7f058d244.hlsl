/**************************
***** Compiler Parameters *****
***************************
@P EffectName: ColorTransformGroupEffect
@P   - ColorTransformGroup.Transforms: SiliconStudio.Xenko.Rendering.Images.ToneMap, SiliconStudio.Xenko.Rendering.Images.LuminanceToChannelTransform
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id72 => SpriteBase.MatrixTransform
cbuffer Globals [Size: 112]
@C    Texture0TexelSize_id14 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id16 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id18 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id20 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id22 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id24 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id26 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id28 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id30 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id32 => Texturing.Texture9TexelSize
@C    WhitePoint_id74 => ToneMapHejl2OperatorShader.WhitePoint.ToneMapOperator.Transforms[0]
@C    KeyValue_id78 => ToneMapShader.KeyValue.Transforms[0]
@C    LuminanceLocalFactor_id79 => ToneMapShader.LuminanceLocalFactor.Transforms[0]
@C    LuminanceAverageGlobal_id80 => ToneMapShader.LuminanceAverageGlobal.Transforms[0]
@C    Contrast_id81 => ToneMapShader.Contrast.Transforms[0]
@C    Brightness_id82 => ToneMapShader.Brightness.Transforms[0]
@C    Exposure_id83 => ToneMapShader.Exposure.Transforms[0]
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    Sampler_id41 => Texturing.Sampler [Stage: Pixel, Slot: (0-0)]
@R    LinearSampler_id43 => Texturing.LinearSampler [Stage: Pixel, Slot: (1-1)]
@R    Texture0_id13 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    LuminanceTexture_id77 => ToneMapShader.LuminanceTexture.Transforms[0] [Stage: Pixel, Slot: (1-1)]
@R    Globals => Globals [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ColorTransformGroupShader => 485322bbc610b87f9fcc9ec9bc7230c3
@S    ImageEffectShader => 31376a3f3da836cbe499b1374d52b9a7
@S    SpriteBase => a411b8f5112d9bc821268e8c81e1a94c
@S    ShaderBase => 5c3160ccbf936c5e102bd9315f0f946a
@S    ShaderBaseStream => f699080594ac63c1f38140de57ce1a7b
@S    Texturing => a9d9ee1fb9a68af7ce6b12291686faea
@S    ColorTransformShader => 9db00955c4fd0bd86c9ca40e21df5bbe
@S    ToneMapShader => bd94634b3ba69d0bc72f9b9df13c0e47
@S    ToneMapOperatorShader => 8560f34fe80accd06b46be04682a522b
@S    ToneMapHejl2OperatorShader => 8a0efa0bf49dd642e2a4f4e767415d0b
@S    LuminanceToChannelShader => 773535645e829b1dd00dfdf937947145
@S    LuminanceUtils => ddf03a665f55106a9ecfa090212a1f1d
***************************
*****     Stages      *****
***************************
@G    Vertex => 7b8af58dd24be2684728cc0b8599ce6f
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id72;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PerDraw                           cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_4_0
dcl_constantbuffer cb0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id71.x; v0.y <- __input__.Position_id71.y; v0.z <- __input__.Position_id71.z; v0.w <- __input__.Position_id71.w; 
//   v1.x <- __input__.TexCoord_id61.x; v1.y <- __input__.TexCoord_id61.y; 
//   o1.x <- <VSMain return value>.TexCoord_id61.x; o1.y <- <VSMain return value>.TexCoord_id61.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 146 "C:\_Rapporter-Xenko3D\RapporterV2\RapporterV2\Bin\Windows\Debug\log\shader_ColorTransformGroupEffect_f1e49b9df6e93acf7d8c53b7f058d244.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 150
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 8088a571a3cbde3aed11d9c43e78a644
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id14;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id16;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id18;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id20;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id22;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id24;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id26;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id28;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id30;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id32;     // Offset:   72 Size:     8 [unused]
//   float WhitePoint_id74;             // Offset:   80 Size:     4
//      = 0x40a00000 
//   float KeyValue_id78;               // Offset:   84 Size:     4 [unused]
//      = 0x3e3851ec 
//   float LuminanceLocalFactor_id79;   // Offset:   88 Size:     4
//      = 0x00000000 
//   float LuminanceAverageGlobal_id80; // Offset:   92 Size:     4
//   float Contrast_id81;               // Offset:   96 Size:     4
//      = 0x00000000 
//   float Brightness_id82;             // Offset:  100 Size:     4
//      = 0x00000000 
//   float Exposure_id83;               // Offset:  104 Size:     4 [unused]
//      = 0x3f800000 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Sampler_id41                      sampler      NA          NA    0        1
// LinearSampler_id43                sampler      NA          NA    1        1
// Texture0_id13                     texture  float4          2d    0        1
// LuminanceTexture_id77             texture  float4          2d    1        1
// Globals                           cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id61.x; v1.y <- __input__.TexCoord_id61.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id1.x; o0.y <- <PSMain return value>.ColorTarget_id1.y; o0.z <- <PSMain return value>.ColorTarget_id1.z; o0.w <- <PSMain return value>.ColorTarget_id1.w
//
#line 117 "C:\_Rapporter-Xenko3D\RapporterV2\RapporterV2\Bin\Windows\Debug\log\shader_ColorTransformGroupEffect_f1e49b9df6e93acf7d8c53b7f058d244.hlsl"
sample r0.xyzw, v1.xyxx, t0.xyzw, s0  // r0.x <- <Shading_id2 return value>.x; r0.y <- <Shading_id2 return value>.y; r0.z <- <Shading_id2 return value>.z

#line 102
lt r0.w, l(0.000000), cb0[5].z
if_nz r0.w
  sample r1.xyzw, v1.xyxx, t1.xyzw, s1  // r1.x <- luminanceAverageLocal
  add r0.w, r1.x, -cb0[5].w
  mad r0.w, cb0[5].z, r0.w, cb0[5].w  // r0.w <- avgLuminance
else 
  mov r0.w, cb0[5].w  // r0.w <- avgLuminance
endif 
exp r0.w, r0.w
exp r1.x, cb0[5].w  // r1.x <- globalAverageLum
mad r0.xyz, r1.xxxx, cb0[6].yyyy, r0.xyzx
max r0.xyzw, r0.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 111
add r1.y, cb0[6].x, l(1.000000)
add r0.xyz, -r1.xxxx, r0.xyzx
mad r0.xyz, r1.yyyy, r0.xyzx, r1.xxxx

#line 74
add r1.x, r0.w, l(1.000000)
log r1.x, r1.x
mad r1.x, r1.x, l(0.301030), l(2.000000)
div r1.x, l(2.000000), r1.x
add r1.x, -r1.x, l(1.030000)  // r1.x <- keyValue
div r0.w, r1.x, r0.w  // r0.w <- linearExposure

#line 111
max r0.xyzw, r0.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 88
mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 62
mov r0.w, cb0[5].x
mad r1.xyzw, r0.xyzw, l(1.425000, 1.425000, 1.425000, 1.425000), l(0.050000, 0.050000, 0.050000, 0.050000)  // r1.x <- va.x; r1.y <- va.y; r1.z <- va.z; r1.w <- va.w
mad r1.xyzw, r0.xyzw, r1.xyzw, l(0.004000, 0.004000, 0.004000, 0.004000)
mad r2.xyzw, r0.xyzw, l(1.425000, 1.425000, 1.425000, 1.425000), l(0.600000, 0.600000, 0.600000, 0.600000)
mad r0.xyzw, r0.xyzw, r2.xyzw, l(0.049100, 0.049100, 0.049100, 0.049100)
div r0.xyzw, r1.xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, l(-0.082100, -0.082100, -0.082100, -0.082100)  // r0.x <- vf.x; r0.y <- vf.y; r0.z <- vf.z; r0.w <- vf.w
div r0.xyz, r0.xyzx, r0.wwww  // r0.x <- <Compute_id9 return value>.x; r0.y <- <Compute_id9 return value>.y; r0.z <- <Compute_id9 return value>.z

#line 83
dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max o0.w, r0.w, l(0.000100)

#line 139
mov o0.xyz, r0.xyzx
ret 
// Approximately 36 instruction slots used
***************************
*************************/
const static bool TAutoKeyValue_id75 = true;
const static bool TAutoExposure_id76 = true;
Texture2D Texture0_id13;
SamplerState Sampler_id41;
SamplerState LinearSampler_id43 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
Texture2D LuminanceTexture_id77;
struct PS_STREAMS 
{
    float2 TexCoord_id61;
    float4 ColorTarget_id1;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id1 : SV_Target0;
};
struct VS_STREAMS 
{
    float4 Position_id71;
    float2 TexCoord_id61;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id61 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id71 : POSITION;
    float2 TexCoord_id61 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id72;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id14;
    float2 Texture1TexelSize_id16;
    float2 Texture2TexelSize_id18;
    float2 Texture3TexelSize_id20;
    float2 Texture4TexelSize_id22;
    float2 Texture5TexelSize_id24;
    float2 Texture6TexelSize_id26;
    float2 Texture7TexelSize_id28;
    float2 Texture8TexelSize_id30;
    float2 Texture9TexelSize_id32;
    float WhitePoint_id74 = 5.0f;
    float KeyValue_id78 = 0.18f;
    float LuminanceLocalFactor_id79 = 0.0f;
    float LuminanceAverageGlobal_id80;
    float Contrast_id81 = 0.0f;
    float Brightness_id82 = 0.0f;
    float Exposure_id83 = 1.0f;
};
float4 Compute_id9(float4 color)
{
    float4 vh = float4(color.rgb, WhitePoint_id74);
    float4 va = (1.425 * vh) + 0.05f;
    float4 vf = ((vh * va + 0.004f) / ((vh * (va + 0.55f) + 0.0491f))) - 0.0821f;
    return float4(vf.rgb / vf.w, 1.0);
}
float CalculateExposure_id7(float avgLuminance)
{
    float exposure;

    {
        float keyValue;

        {
            keyValue = 1.03f - (2.0f / (2 + log10(avgLuminance + 1)));
        }
        float linearExposure = (keyValue / avgLuminance);
        exposure = max(linearExposure, 0.0001f);
    }
    return exposure;
}
static float Luma_id12(float3 color)
{
    return max(dot(color, float3(0.299, 0.587, 0.114)), 0.0001);
}
float3 ToneMap_id6(float3 color, float avgLuminance)
{
    float exposure = CalculateExposure_id7(avgLuminance);
    color *= exposure;
    color = Compute_id9(float4(color, 1)).rgb;
    return color;
}
float4 Compute_id5(float4 color)
{
    float4 outColor = color;
    outColor.a = Luma_id12(color.rgb);
    return outColor;
}
float4 Compute_id4(inout PS_STREAMS streams, float4 inputColor)
{
    float3 color = inputColor.rgb;
    float avgLuminance = LuminanceAverageGlobal_id80;
    if (LuminanceLocalFactor_id79 > 0.0f)
    {
        float luminanceAverageLocal = LuminanceTexture_id77.Sample(LinearSampler_id43, streams.TexCoord_id61).r;
        avgLuminance = lerp(avgLuminance, luminanceAverageLocal, LuminanceLocalFactor_id79);
    }
    avgLuminance = exp2(avgLuminance);
    avgLuminance = max(avgLuminance, 0.0001f);
    float globalAverageLum = exp2(LuminanceAverageGlobal_id80);
    color = max(color + globalAverageLum.xxx * Brightness_id82, 0.0001);
    color = max(lerp(globalAverageLum.xxx, color, Contrast_id81 + 1.0f), 0.0001);
    color = ToneMap_id6(color, avgLuminance);
    return float4(color, inputColor.a);
}
float4 Shading_id2(inout PS_STREAMS streams)
{
    return Texture0_id13.Sample(Sampler_id41, streams.TexCoord_id61);
}
float4 Shading_id3(inout PS_STREAMS streams)
{
    float4 color = Shading_id2(streams);

    {
        color = Compute_id4(streams, color);
    }

    {
        color = Compute_id5(color);
    }
    return color;
}
PS_OUTPUT PSMain(VS_OUTPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id61 = __input__.TexCoord_id61;
    streams.ColorTarget_id1 = Shading_id3(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id1 = streams.ColorTarget_id1;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id71 = __input__.Position_id71;
    streams.TexCoord_id61 = __input__.TexCoord_id61;
    streams.ShadingPosition_id0 = mul(streams.Position_id71, MatrixTransform_id72);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id61 = streams.TexCoord_id61;
    return __output__;
}
